name: Tag, Release, and Publish

on:
  push:
    branches:
      - master

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step1.outputs.v }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version number
        id: step1 
        run: echo "v=$(grep ':Version:' README.rst | awk '{print $2}')" >> $GITHUB_OUTPUT

  github-tag-and-release:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set version number
        run: echo "DIST_VERSION=v${{ needs.get-version.outputs.version }}" >> $GITHUB_ENV
      - name: Create GitHub Tag
        uses: actions/github-script@v7
        with:
          script: |
            const {DIST_VERSION} = process.env
            github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${DIST_VERSION}`,
                sha: context.sha
            })
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.DIST_VERSION }}"
          tag: "${{ env.DIST_VERSION }}"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build-n-publish:
    name: Build and Publish to PyPI
    needs: github-tag-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install pypa/build
        run: python -m pip install build --user
      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://pypi.org/p/primpy/
